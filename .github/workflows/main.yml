name: Release Dev-Build

on:
  push:
    branches: [ development ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  bump_build_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      # 1) Read current version from modules/MyPet/pom.xml and bump PATCH
      - name: Read current version
        id: getver
        run: |
          CURR=$(mvn -f modules/MyPet/pom.xml -q -DforceStdout help:evaluate -Dexpression=project.version)
          echo "current=$CURR" >> $GITHUB_OUTPUT

      - name: Compute next PATCH version
        id: bump
        run: |
          v='${{ steps.getver.outputs.current }}'
          IFS='.' read -r MA MI PA <<< "$v"
          if [[ -z "$MA" || -z "$MI" || -z "$PA" ]]; then
            echo "Could not parse version: $v"; exit 1
          fi
          NEXT="${MA}.${MI}.$((PA+1))"
          echo "next=$NEXT" >> $GITHUB_OUTPUT
          echo "Bumping $v -> $NEXT"

      # 2) Apply new version to the MyPet module POM (the one your plugin inherits from)
      - name: Set version in MyPet module POM
        run: |
          mvn -f modules/MyPet/pom.xml versions:set -DnewVersion='${{ steps.bump.outputs.next }}' -DgenerateBackupPoms=false

      - name: Commit version bump
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add modules/MyPet/pom.xml
          git commit -m "chore(release): bump MyPet to ${{ steps.bump.outputs.next }}"
          git push

      # 3) Tag the repo with the same version
      - name: Tag and push
        run: |
          git tag -a '${{ steps.bump.outputs.next }}' -m 'Release ${{ steps.bump.outputs.next }}'
          git push origin '${{ steps.bump.outputs.next }}'

      # 4) Build (no -Dproject.version override needed now)
      - name: Maven build
        run: mvn -B clean package -DskipTests=false

      # 5) Create GitHub Release and upload JARs
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.bump.outputs.next }}
          name: v${{ steps.bump.outputs.next }}
          files: |
            modules/**/target/*.jar
            **/target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
