name: Release Dev-Build

on:
  push:
    branches: [ development ]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: dev-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java (with Maven cache)
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
          cache: maven

      # Optional: read current version (kept for visibility / logs)
      - name: Read current version from MyPet module
        id: getver
        run: |
          ver=$(mvn -f modules/MyPet/pom.xml -q -DforceStdout help:evaluate -Dexpression=project.version)
          echo "version=$ver" >> "$GITHUB_OUTPUT"

      # Compute next PATCH tag from existing repo tags, but DO NOT create the tag yet
      - name: Compute next tag (PATCH, dry-run)
        id: tag
        uses: anothrNick/github-tag-action@1.71.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch
          WITH_V: false              # produce 1.2.3 (no leading v)
          RELEASE_BRANCHES: development
          DRY_RUN: true              # important: only calculate, don't tag yet

      - name: Update version in MyPet module
        run: |
          mvn -f modules/MyPet versions:set -DnewVersion=${{ steps.tag.outputs.new_tag }} -DgenerateBackupPoms=false

      - name: Commit bumped version and tag
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add modules/MyPet/pom.xml
          git commit -m "chore(release): bump version to ${{ steps.tag.outputs.new_tag }}" || echo "No changes to commit"
          git tag -a ${{ steps.tag.outputs.new_tag }} -m "Release ${{ steps.tag.outputs.new_tag }}"
          git push origin HEAD --tags

      # Build using your previous compile flags
      - name: Compile
        run: |
          mvn --batch-mode clean package -DGIT_COMMIT=${{ github.sha }} -DBUILD_NUMBER=${{ github.run_number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          name: v${{ steps.tag.outputs.new_tag }}
          files: |
            modules/MyPet/target/*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
